% Runs the Challenge Task of Lab4 where robot_id is the id of the RaspBot
% and type is a binary where 0 -> feedforward operation, 1 -> ffwd+fbk trim
function Lab4_Challenge(robot_id, type)
    %% SETUP ROBOT
    rasp = raspbot(robot_id, [0; 0; pi/2])
    rob = P2_Robot(rasp);
    if(~strcmp(robot_id,'sim'))
        rob_type = 'raspbot';
        rob.core.togglePlot(); %Turn on map plotting for non-simulated robots
        RangeImage.INDEX_OFFSET(5);
        rob.core.forksDown(); % Prevent Brown-out
    end
    %% SETUP SIM MAPPING
    bounds = 2 * ShapeGen.translatePts( ShapeGen.rect(1,1), 0,0.5 ); %[0.5 0; 0.5 1; -0.5 1; -0.5 0]; % Inverted U-Shaped Container
    person_lines = ShapeGen.rect(0.1,0.05);
    wm = WorldMap(rob, bounds);
        person = wm.addObstacle(person_lines); % Person to Follow.
        person.pose = [0.25 0.5 0]; % Move to Center Screen
    wm.createMap();
    pause(1) % Wait for World to Initialize
    
    %% TASK PARAMETERS
    v_max = 0.25;       % m/s, peak velocity of ffwd reference trajectory
    a_max = 3*0.25;     % m/s^2, peak acceleration of ffwd ref trajectory
    targ_dist = 1;      % m, target distance of the ffwd ref. trajectory
    
    t_over = 1;         % s, time for algorithm to run after reaching target
    
    %% PLOT SETUP
    fig = figure();
    u_plot = PersistentPlot(fig, 0, 0);
    s_plot = PersistentPlot(fig, 0, 0);
    
    %% ALGORITHM
    %rob.enablePositionPlotting();
    rob.waitForReady();
    
    u = 0;
    %Anonymous function handle for velocity profile:
    uref = @(t)u_ref_ch(t,a_max,v_max,targ_dist);
    usig = @(t)uref(t); % Control Signal
    
    us = [0]; % Reference Velocities
    ss = [0]; % Reference Distances
    
    done = 0;
    t0 = tic;
    t_last = toc(t0);
    while(~done)
        ss(end+1) = ss(end) + us(end)*(toc(t0)-t_last);
        t_last = toc(t0);
        us(end+1) = usig(t_last);
        
        rob.moveAt(us(end), 0);
        
        if(ss(end) > targ_dist)
            done = 1;
        end
        
        u_plot.resetXY
        
        pause(0.05); % CPU Relief
    end % while ~done

end % #Lab4_Challenge